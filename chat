@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Dashboard";
}

<div class="container-fluid">
    <h1 class="text-center mt-4 mb-4">Admin Dashboard</h1>
    <hr />
    <div class="row mb-4">
        <div class="col-lg-6 col-md-6">
            <div class="stat-counter card-gradient-primary mb-3 shadow-sm">
                <div class="stat-icon">
                    <i class="fas fa-file-alt"></i>
                </div>
                <div class="stat-number" id="policyRequestCount">0</div>
                <div class="stat-label">Total Policies</div>
            </div>
            <!-- Line Chart for Total Policies -->
            <div class="chart-container">
                <canvas id="policyChart"></canvas>
            </div>
        </div>
        <div class="col-lg-6 col-md-6">
            <div class="stat-counter card-gradient-success mb-3 shadow-sm">
                <div class="stat-icon">
                    <i class="fas fa-clipboard-check"></i>
                </div>
                <div class="stat-number" id="claimCount">0</div>
                <div class="stat-label">Total Claim Requests</div>
            </div>
            <!-- Line Chart for Total Claim Requests -->
            <div class="chart-container">
                <canvas id="claimChart"></canvas>
            </div>
        </div>
    </div>
</div>

<style>
    .stat-counter {
        display: flex;
        flex-direction: column;
        align-items: center;
        padding: 20px;
        border-radius: 15px;
        color: #fff;
        background: linear-gradient(135deg, rgba(255,255,255,0.1), rgba(255,255,255,0));
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .card-gradient-primary {
        background: linear-gradient(135deg, #1e3c72, #2a5298);
    }

    .card-gradient-success {
        background: linear-gradient(135deg, #1d976c, #93f9b9);
    }

    .stat-icon {
        font-size: 2.5rem;
        margin-bottom: 10px;
    }

    .stat-number {
        font-size: 2.5rem;
        font-weight: bold;
    }

    .stat-label {
        font-size: 1.25rem;
    }

    .stat-counter:hover {
        transform: scale(1.05);
        box-shadow: 0px 4px 20px rgba(0, 0, 0, 0.2);
    }

    .chart-container {
        position: relative;
        height: 400px;
        margin-top: 20px;
    }
</style>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Fetch data from InsuredPolicy API
        fetch('/api/insuredpolicy')
            .then(response => response.json())
            .then(data => {
                const policyHistoricalData = data.map(item => item.Count); // Adjust based on your API response structure
                const policyCount = policyHistoricalData[policyHistoricalData.length - 1] || 0;

                // Update statistics
                document.getElementById('policyRequestCount').textContent = policyCount;

                // Line Chart for Total Policies
                const policyChartCtx = document.getElementById('policyChart').getContext('2d');
                const policyChart = new Chart(policyChartCtx, {
                    type: 'line',
                    data: {
                        labels: generateLabels(policyHistoricalData.length),
                        datasets: [{
                            label: 'Policies',
                            data: policyHistoricalData,
                            backgroundColor: 'rgba(30, 60, 114, 0.2)',
                            borderColor: 'rgba(30, 60, 114, 1)',
                            borderWidth: 2,
                            fill: true
                        }]
                    },
                    options: {
                        responsive: true,
                        scales: {
                            x: {
                                beginAtZero: true
                            },
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            })
            .catch(error => console.error('Error fetching policy data:', error));

        // Fetch data from Claim API
        fetch('/api/claim')
            .then(response => response.json())
            .then(data => {
                const claimHistoricalData = data.map(item => item.Count); // Adjust based on your API response structure
                const claimCount = claimHistoricalData[claimHistoricalData.length - 1] || 0;

                // Update statistics
                document.getElementById('claimCount').textContent = claimCount;

                // Line Chart for Total Claim Requests
                const claimChartCtx = document.getElementById('claimChart').getContext('2d');
                const claimChart = new Chart(claimChartCtx, {
                    type: 'line',
                    data: {
                        labels: generateLabels(claimHistoricalData.length),
                        datasets: [{
                            label: 'Claims',
                            data: claimHistoricalData,
                            backgroundColor: 'rgba(29, 151, 108, 0.2)',
                            borderColor: 'rgba(29, 151, 108, 1)',
                            borderWidth: 2,
                            fill: true
                        }]
                    },
                    options: {
                        responsive: true,
                        scales: {
                            x: {
                                beginAtZero: true
                            },
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            })
            .catch(error => console.error('Error fetching claim data:', error));
    });

    // Function to generate labels for the x-axis
    function generateLabels(count) {
        return Array.from({ length: count }, (_, i) => `Period ${i + 1}`);
    }
</script>
