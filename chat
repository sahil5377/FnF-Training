public async Task<int> GetTotalPoliciesCountAsync()
{
    return await context.InsuredPolicies.CountAsync();
}

[HttpGet("count")]
public async Task<IActionResult> GetTotalPoliciesCount()
{
    var count = await service.GetTotalPoliciesCountAsync();
    return Ok(count);
}

public async Task<Dictionary<string, int>> GetDailyPolicyDataAsync()
{
    var dailyData = await context.InsuredPolicies
        .GroupBy(ip => EF.Functions.DateDiffDay(new DateTime(1970, 1, 1), ip.ApprovalDate))
        .Select(g => new { Date = g.Key, Count = g.Count() })
        .ToListAsync();

    return dailyData.ToDictionary(x => x.Date.ToString(), x => x.Count);
}

[HttpGet("dailyData")]
public async Task<IActionResult> GetDailyPolicyData()
{
    var dailyData = await service.GetDailyPolicyDataAsync();
    return Ok(dailyData);
}

