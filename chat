@model List<InsuranceApi.DTOs.PolicyHolderDto>

@{
    ViewData["Title"] = "Manage Customers";
}

<h2 class="page-title">Manage Customers</h2>

<div class="table-responsive">
    <table class="table table-custom">
        <thead class="thead-custom">
            <tr>
                <th>Policy Holder ID</th>
                <th>Name</th>
                <th>Address</th>
                <th>Phone</th>
                <th>Email</th>
                <th>Status</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var policyHolder in Model)
            {
                <tr class="table-row">
                    <td>@policyHolder.PolicyHolderId</td>
                    <td>@policyHolder.Name</td>
                    <td>@policyHolder.Address</td>
                    <td>@policyHolder.Phone</td>
                    <td>@policyHolder.Email</td>
                    <td>
                        @if (policyHolder.Status == 1)
                        {
                            <span class="status-label status-active">Active</span>
                        }
                        else
                        {
                            <span class="status-label status-blocked">Blocked</span>
                        }
                    </td>
                    <td>
                        <button class="btn toggle-button @(policyHolder.Status == 1 ? "btn-primary" : "btn-secondary")" onclick="toggleStatus(@policyHolder.PolicyHolderId, @policyHolder.Status)">
                            <span class="toggle-slider @(policyHolder.Status == 1 ? "active" : "inactive")"></span>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<style>
    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: #fff;
    }

    .page-title {
        font-size: 2.5rem;
        margin-bottom: 30px;
        text-align: center;
        font-weight: 600;
        animation: fadeInDown 1s ease-in-out;
    }

    .table-responsive {
        margin: 0 auto;
        max-width: 95%;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
        background-color: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
        animation: fadeInUp 1s ease-in-out;
    }

    .table-custom {
        width: 100%;
        margin-bottom: 1rem;
        color: #212529;
    }

    .thead-custom {
        background-color: rgba(0, 0, 0, 0.2);
        color: white;
    }

    .table-row {
        transition: transform 0.2s, box-shadow 0.2s;
    }

    .table-row:hover {
        transform: translateY(-5px);
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
    }

    .status-label {
        display: inline-block;
        padding: 5px 15px;
        border-radius: 20px;
        color: white;
        font-weight: bold;
        transition: background-color 0.3s ease, transform 0.3s ease;
    }

    .status-active {
        background-color: #28a745;
    }

    .status-blocked {
        background-color: #dc3545;
    }

    .toggle-button {
        position: relative;
        width: 70px;
        height: 36px;
        border: none;
        border-radius: 18px;
        cursor: pointer;
        outline: none;
        background-color: #ddd;
        transition: background-color 0.3s ease, transform 0.3s ease;
        overflow: hidden;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    }

    .btn-primary {
        background-color: #007bff;
    }

    .btn-secondary {
        background-color: #6c757d;
    }

    .toggle-slider {
        position: absolute;
        top: 3px;
        left: 3px;
        width: 30px;
        height: 30px;
        border-radius: 50%;
        background-color: white;
        transition: transform 0.3s ease, background-color 0.3s ease;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
    }

    .toggle-button.btn-primary .toggle-slider {
        transform: translateX(34px);
        background-color: lightgreen;
    }

    .toggle-button.btn-secondary .toggle-slider {
        transform: translateX(0);
        background-color: lightcoral;
    }

    .toggle-button:hover .toggle-slider {
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
    }

    @keyframes fadeInDown {
        0% {
            opacity: 0;
            transform: translateY(-20px);
        }
        100% {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @keyframes fadeInUp {
        0% {
            opacity: 0;
            transform: translateY(20px);
        }
        100% {
            opacity: 1;
            transform: translateY(0);
        }
    }
</style>

<script>
    async function toggleStatus(id, currentStatus) {
        let newStatus = currentStatus === 1 ? 0 : 1;

        const response = await fetch(`/PolicyHolder/${id}/status`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(newStatus)
        });

        if (response.ok) {
            location.reload();
        } else {
            alert('Failed to update status');
        }
    }
</script>
