@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Dashboard";
    var policyRequestCount = TempData.Peek("PolicyRequestCount") ?? "0";
    var claimCount = TempData.Peek("ClaimCount") ?? "0"; 
    var customerCount = TempData.Peek("CustomerCount") ?? "0";
    var hospitalCount = TempData.Peek("HospitalCount") ?? "0";
}


<div class="container-fluid">
    <h1 class="text-center mt-4 mb-4">Admin Dashboard</h1>
    <hr />
    <div class="row mb-4">
        <div class="col-lg-3 col-md-6">
            <div class="stat-counter card-gradient-primary mb-3 shadow-sm">
                <div class="stat-icon">
                    <i class="fas fa-file-alt"></i>
                </div>
                <div class="stat-number" id="policyRequestCount">@policyRequestCount</div>
                <div class="stat-label">Total Policies</div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6">
            <div class="stat-counter card-gradient-success mb-3 shadow-sm">
                <div class="stat-icon">
                    <i class="fas fa-clipboard-check"></i>
                </div>
                <div class="stat-number" id="claimCount">@claimCount</div>
                <div class="stat-label">Total Claim Requests</div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6">
            <div class="stat-counter card-gradient-warning mb-3 shadow-sm">
                <div class="stat-icon">
                    <i class="fa fa-users"></i>
                </div>
                <div class="stat-number" id="customerCount">@customerCount</div>
                <div class="stat-label">Total Customers</div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6">
            <div class="stat-counter card-gradient-danger mb-3 shadow-sm">
                <div class="stat-icon">
                    <i class="fas fa-hospital"></i>
                </div>
                <div class="stat-number" id="hospitalCount">@hospitalCount</div>
                <div class="stat-label">Active Hospitals</div>
            </div>
        </div>
    </div>
</div>

<style>
    .stat-counter {
        display: flex;
        flex-direction: column;
        align-items: center;
        padding: 20px;
        border-radius: 15px;
        color: #fff;
        background: linear-gradient(135deg, rgba(255,255,255,0.1), rgba(255,255,255,0));
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .card-gradient-primary {
        background: linear-gradient(135deg, #1e3c72, #2a5298);
    }

    .card-gradient-success {
        background: linear-gradient(135deg, #1d976c, #93f9b9);
    }

    .card-gradient-warning {
        background: linear-gradient(135deg, #f5af19, #f12711);
    }

    .card-gradient-danger {
        background: linear-gradient(135deg, #8e2de2, #4a00e0);
    }

    .stat-icon {
        font-size: 2.5rem;
        margin-bottom: 10px;
    }

    .stat-number {
        font-size: 2.5rem;
        font-weight: bold;
    }

    .stat-label {
        font-size: 1.25rem;
    }

    .stat-counter:hover {
        transform: scale(1.05);
        box-shadow: 0px 4px 20px rgba(0, 0, 0, 0.2);
    }

    .chart-container {
        position: relative;
        height: 400px;
    }

    .card {
        margin-bottom: 30px;
        border-radius: 20px;
    }

    .card-header {
        font-size: 1.5rem;
        padding: 15px;
    }

    .card-body {
        padding: 20px;
    }
</style>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    // document.addEventListener('DOMContentLoaded', function () {
    //     // Number counters
    //     document.querySelectorAll('.stat-number').forEach(function (el) {
    //         const number = parseInt(el.textContent, 10); // Directly read textContent
    //         let counter = 0;
    //         const interval = setInterval(function () {
    //             if (counter >= number) {
    //                 clearInterval(interval);
    //             } else {
    //                 counter += Math.ceil(number / 100);
    //                 el.textContent = counter > number ? number : counter;
    //             }
    //         }, 10);
    //     });
    // });

    document.addEventListener('DOMContentLoaded', function () {
        const policyCountEl = document.getElementById('policyRequestCount');
        console.log(policyCountEl.textContent);  // Debug to see if the correct value is present
    });
    document.addEventListener('DOMContentLoaded', function () {
        const claimCountEl = document.getElementById('claimCount');
        console.log(claimCountEl.textContent);  // Debug to see if the correct value is present
    });
    document.addEventListener('DOMContentLoaded', function () {
        const customerCountEl = document.getElementById('customerCount');
        console.log(customerCountEl.textContent);  // Debug to see if the correct value is present
    });
    document.addEventListener('DOMContentLoaded', function () {
        const hospitalCountEl = document.getElementById('hospitalCount');
        console.log(hospitalCountEl.textContent);  // Debug to see if the correct value is present
    });
    
</script>

I want to two Bar Graphs or pie charts or hinstograms for (total policies and total claim request). downside the cards. the graphs will track the count and change 
accordingly. the graph should increase or decrease with the count
