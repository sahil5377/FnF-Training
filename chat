@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Dashboard";
    var policyRequestCount = TempData.Peek("PolicyRequestCount") ?? "0";
    var claimCount = TempData.Peek("ClaimCount") ?? "0"; 
    var customerCount = TempData.Peek("CustomerCount") ?? "0";
    var hospitalCount = TempData.Peek("HospitalCount") ?? "0";
    
    // Example data for dates; in practice, these could be dynamically fetched based on real data
    var dates = new[] { "2024-08-22", "2024-08-23", "2024-08-24", "2024-08-25", "2024-08-26", "2024-08-27" };
    var policyCounts = new[] { policyRequestCount, policyRequestCount - 2, policyRequestCount + 3, policyRequestCount - 1, policyRequestCount + 1, policyRequestCount };
    var claimCounts = new[] { claimCount - 1, claimCount, claimCount + 2, claimCount - 3, claimCount + 4, claimCount };
}

<div class="container-fluid">
    <!-- (Same HTML as before) -->
</div>

<!-- Using a different CDN for Chart.js -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Preparing the data from TempData
        const dates = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(dates));
        const policyCounts = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(policyCounts));
        const claimCounts = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(claimCounts));

        // Initialize a line chart for Policies with date on Y-axis
        var ctx = document.getElementById('policiesChart').getContext('2d');
        var policiesChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: dates,  // Y-axis: Dates
                datasets: [{
                    label: 'Policies',
                    data: policyCounts,  // X-axis: Counts
                    fill: true,
                    borderColor: 'rgba(54, 162, 235, 1)',
                    backgroundColor: 'rgba(54, 162, 235, 0.2)',
                    tension: 0.4
                }]
            },
            options: {
                scales: {
                    y: {
                        title: {
                            display: true,
                            text: 'Date'
                        }
                    },
                    x: {
                        title: {
                            display: true,
                            text: 'Number of Policies'
                        },
                        beginAtZero: true
                    }
                }
            }
        });

        // Initialize a bar chart for Claims with date on Y-axis
        var ctx2 = document.getElementById('claimsChart').getContext('2d');
        var claimsChart = new Chart(ctx2, {
            type: 'bar',
            data: {
                labels: dates,  // Y-axis: Dates
                datasets: [{
                    label: 'Claims',
                    data: claimCounts,  // X-axis: Counts
                    backgroundColor: 'rgba(255, 99, 132, 0.5)',
                    borderColor: 'rgba(255, 99, 132, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        title: {
                            display: true,
                            text: 'Date'
                        }
                    },
                    x: {
                        title: {
                            display: true,
                            text: 'Number of Claims'
                        },
                        beginAtZero: true
                    }
                }
            }
        });
    });
</script>
