@model List<InsuranceApi.DTOs.InsuranceTypeDto>

@{
    ViewData["Title"] = "View Active Plans";
}

<h2>Active Plans</h2>

<div class="row">
    @foreach (var plan in Model)
    {
        <div class="col-md-3 mb-4">
            <div class="card shadow-sm">
                <div class="card-body">
                    <h5 class="card-title"><strong>@plan.InsuranceType</strong></h5>
                    <p class="card-text"><strong>Description:</strong><br>@plan.Description</p>
                    <p class="card-text"><strong>Base Rate:</strong> @plan.BaseRate</p>
                    <p class="card-text"><strong>Coverage Size:</strong> @plan.CoverageSize</p>
                    <button class="btn btn-primary" onclick="showUpdatePopup(@plan.InsuranceId)">Update Details</button>
                    <button class="btn btn-danger" onclick="confirmDelete(@plan.InsuranceId)">Delete</button>
                </div>
            </div>
        </div>
    }
</div>

<!-- Update Plan Modal -->
<div id="updatePlanModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="updatePlanModalLabel" aria-hidden="true">
    <!-- Modal content here -->
</div>

@section Scripts {
    <script>
        function confirmDelete(insuranceId) {
            if (confirm('Are you sure you want to delete this plan?')) {
                deletePlan(insuranceId);
            }
        }

        async function deletePlan(insuranceId) {
            const response = await fetch(`/Plans/Delete/${insuranceId}`, {
                method: 'DELETE'
            });

            if (response.ok) {
                alert('Plan deleted successfully');
                location.reload();
            } else {
                alert('Failed to delete the plan');
            }
        }

        // Existing updatePlan function to handle the update modal
        function showUpdatePopup(insuranceId) {
            // Logic to populate and show the update modal
        }
    </script>
}
