using Microsoft.Extensions.Configuration;
using System;
using System.Collections.Generic;
using System.Linq;

namespace ConsoleApp1
{
    internal class LinqExample
    {
        public static IConfiguration Configuration { get; set; }
        public static LinqRepo repo = null;

        static void Main(string[] args)
        {
            Init();
            var emplist = repo.Employees;

            // Display employees from Lucknow
            searchByCity(emplist, "Lucknow");

            // Display employees ordered by city
            OrderByCity(emplist);

            // Group employees by city and display
            GroupEmployeesByCity(emplist);

            // Display join example
            JoinEmployeesAndDepartments(emplist, repo.Departments);
        }

        private static void searchByCity(List<Employee> emplist, string City)
        {
            var query = from emp in emplist
                        where emp.EmpCity == City
                        select emp;
            Console.WriteLine("People from " + City);
            foreach (var emp in query)
            {
                Console.WriteLine($"{emp.EmpName}");
            }
        }

        private static void OrderByCity(List<Employee> emplist)
        {
            var query = from emp in emplist
                        orderby emp.EmpCity
                        select emp;
            Console.WriteLine("\nEmployees ordered by city:");
            foreach (var emp in query)
            {
                Console.WriteLine($"{emp.EmpName} - {emp.EmpCity}");
            }
        }

        private static void GroupEmployeesByCity(List<Employee> emplist)
        {
            var query = from emp in emplist
                        group emp by emp.EmpCity into cityGroup
                        select cityGroup;
            Console.WriteLine("\nEmployees grouped by city:");
            foreach (var group in query)
            {
                Console.WriteLine($"City: {group.Key}");
                foreach (var emp in group)
                {
                    Console.WriteLine($"  {emp.EmpName}");
                }
            }
        }

        private static void JoinEmployeesAndDepartments(List<Employee> emplist, List<Department> deptList)
        {
            var query = from emp in emplist
                        join dept in deptList on emp.DeptId equals dept.DeptId
                        select new { emp.EmpName, dept.DeptName };

            Console.WriteLine("\nJoin example - Employees and Departments:");
            foreach (var result in query)
            {
                Console.WriteLine($"{result.EmpName} works in {result.DeptName}");
            }
        }

        private static void displayNameAndCities(List<Employee> emplist)
        {
            var query = from emp in emplist
                        select new { emp.EmpName, emp.EmpCity };
            foreach (var name in query)
            {
                Console.WriteLine(name);
            }
        }

        private static void Init()
        {
            var config = new ConfigurationBuilder()
                .SetBasePath(AppDomain.CurrentDomain.BaseDirectory)
                .AddJsonFile("appsettings.json", false)
                .Build();
            Configuration = config;
            var Empfilename = Configuration["FileOptions:linqCsv"];
            repo = new LinqRepo(Empfilename);
        }

        private static void firstExample()
        {
            var values = new string[] { "Apple", "Bananas", "Mangoes", "Oranges" };
            var filtered = from e in values
                           where e.Length > 6
                           select e;
            foreach (var e in filtered)
            {
                Console.WriteLine(e);
            }
            filtered = from e in values
                       where e.EndsWith("es")
                       select e;
            foreach (var e in filtered)
            {
                Console.WriteLine(e);
            }
        }
    }
}
